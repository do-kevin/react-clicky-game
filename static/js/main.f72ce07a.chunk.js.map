{"version":3,"sources":["components/Jumbotron/Jumbotron.js","components/Navbar/Navbar.js","components/Box/Box.js","Game.js","index.js"],"names":["Jumbotron","react_default","a","createElement","className","Navbar","props","score","id","result","wins","Box","key","src","alt","onClick","clickPokemon","Game","state","pokemon","continueOrGameOver","previousPokemon","count","select","Howl","lose","win","shufflePokemon","array","i","length","j","Math","floor","random","temp","event","_this","setState","concat","target","play","includes","stop","console","log","position","_this2","this","components_Jumbotron_Jumbotron","components_Navbar_Navbar","map","monster","components_Box_Box","Component","ReactDOM","render","src_Game_0","document","querySelector"],"mappings":"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","file":"static/js/main.f72ce07a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Jumbotron.css\";\n \nconst Jumbotron = function() {\n  return (\n    <div className=\"jumbotron\">\n      <h1>Remember Those Pokemons!</h1>\n      <h2>Click on a Pokemon, but remember to not click on the same Pokemon twice!</h2>\n    </div>\n  );\n};\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./Navbar.css\";\n\nconst Navbar = function(props) {\n  return (\n    <nav className=\"navbar navbar-default navbar-fixed-top\">\n      <div className=\"container\">\n        <div className=\"col-md-4\">\n          <p className=\"nav-item\">\n            SCORE: <span>{props.score}</span>\n          </p>\n        </div>\n        <div className=\"col-md-4\">\n          <p className=\"nav-item\" id=\"nav-underline\">\n            <span>{props.result}</span>\n          </p>\n        </div>\n        <div className=\"col-md-4\">\n          <p className=\"nav-item\">\n            WINS: <span>{props.wins}</span>\n          </p>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./Box.css\";\n\nconst Box = function(props) {\n    // console.log('hit');\n    // console.log(props);\n  return (\n    <img\n      className=\"box animated zoomIn delay-1.5s\"\n      id={props.id}\n      key={props.id}\n      src={props.src}\n      alt={props.alt}\n      onClick={props.clickPokemon}\n    />\n  );\n};\n//\nexport default Box;\n","import React, { Component } from \"react\";\nimport { Howl } from \"howler\";\nimport Navbar from \"./components/Jumbotron\";\nimport Jumbotron from \"./components/Navbar\";\nimport Box from \"./components/Box\";\nimport pokemon from \"./pokemon.json\";\nimport \"./Game.css\";\n\nclass Game extends Component {\n  state = {\n    pokemon,\n    continueOrGameOver: \"\",\n    previousPokemon: [],\n    wins: 0,\n    score: 0,\n    count: 0,\n    result: \"\"\n  };\n\n  select = new Howl({\n    src: [\"./assets/audio/select.wav\"]\n  });\n\n  lose = new Howl({\n    src: [\"./assets/audio/lose.wav\"]\n  });\n\n  win = new Howl({\n    src: [\"./assets/audio/win.wav\"]\n  });\n  \n\n  shufflePokemon = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  };\n\n  clickPokemon = event => {\n    this.setState({\n      previousPokemon: this.state.previousPokemon.concat(event.target.alt)\n    });\n\n    this.select.play();\n\n    if (!(this.state.previousPokemon.includes(event.target.alt))) {\n      this.setState({ score: this.state.score + 1, result: \"You guessed correctly\" });\n      if (this.state.score === 11) { // Updates after score is 11\n        this.setState({ score: 0, wins: this.state.wins + 1, result: \"You win!\" });\n        console.log(this.state.wins);\n        this.win.play();\n        console.log(\"You won\");\n      }\n    } else if (this.state.previousPokemon.includes(event.target.alt)) {\n      this.setState({ score: 0, previousPokemon: [], result: \"You lost. Try again\" });\n      this.lose.stop();\n      this.lose.play();\n      console.log(\"You lost\");\n    }\n\n    this.setState({ position: this.shufflePokemon(this.state.pokemon) });\n\n    console.log(event.target.alt)\n    console.log(this.state.previousPokemon);\n    console.log(this.state.score);\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar \n          score={this.state.score}\n          result={this.state.result}\n          wins={this.state.wins}\n        />\n        <Jumbotron />\n        <main>\n          <section className=\"container\">\n            {this.state.pokemon.map(monster => {\n              // console.log(\"=================\");\n              // console.log(monster.id);\n              // console.log(monster.src);\n              // console.log(monster.name);\n              return (\n                <Box\n                  id={monster.id}\n                  key={monster.id}\n                  src={monster.src}\n                  alt={monster.alt}\n                  clickPokemon={this.clickPokemon}\n                />\n              );\n            })}\n          </section>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Game from \"./Game\";\n\nReactDOM.render(<Game/>, document.querySelector(\"#root\"));"],"sourceRoot":""}